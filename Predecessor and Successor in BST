/* This is a program to find the predecessor and successor of a node in a BST. It uses a recursive algorithm to find the same.  */

void findPreSuc(Node* root, Node*& pre, Node*& suc, int key)
{
    if(root==NULL)
        return;
    if(root->key==key)
    {
        if(root->left!=NULL)
        {
            Node* ptr = root->left;
            while(ptr->right!=NULL)
                ptr = ptr->right;
            pre = ptr;
        }
        if(root->right!=NULL)
        {
            Node* ptr = root->right;
            while(ptr->left!=NULL)
                ptr = ptr->left;
            suc = ptr;
        }
        return;
    }
    if(root->key>key)
    {
        suc = root;
        findPreSuc(root->left,pre,suc,key);
    }
    if(root->key<key)
    {
        pre = root;
        findPreSuc(root->right,pre,suc,key);
    }
}
