Node* bt(int in[],int instrt,int inend,int post[],int &postIndex,unordered_map<int,int> &map)
{
    if(instrt > inend)
        return NULL;
    int x = post[postIndex];
    Node* root = new Node(x);
    int pivot = map[x];
    postIndex--;
    if(instrt == inend)
        return root;
    
    root->right = bt(in, pivot+1, inend, post, postIndex, map);
    root->left = bt(in,instrt,pivot-1,post, postIndex, map);
    
}

Node *buildTree(int in[], int post[], int n)
{
    Node* root = NULL;
    int pstart,pend;
    pend = n-1;
    pstart = 0;
    unordered_map<int,int> map;
    for(int i=0;i<n;i++)
    {
        map[in[i]] = i;
    }
    int postIndex = n-1;
    return bt(in,0,n-1,post,postIndex,map);
}
